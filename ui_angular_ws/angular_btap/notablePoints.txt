Angular Notable Ponits
======================

-----------
Directives:
-----------
 
 (i)Available Configuartion Tag
   All default Value of Directive Played Here
    var myDerivedOuputContent = {
     priority:0,
     template:'<div>This Message Fron Venkat Tab</div>',
     //templateUrl:myTemplate.html,
     transclude:false,
     restrict:'A',
     //Default template type is false(Applicable SVG/HTML/MATH)
     templateNameSpace:'html',
     //We can do alternate as scope:{applicables}
     scope:true,
     controller:function($scope,$element,$attrs,$transclude){
     	//logic goes here
     },
     controlerAs:'aliasNameOfContrller',
     //Or other Dependent directives e.g:ngModel
     require:'siblingDirectiveName',
     compile:function compile(tElement,tAttrs,transclude) {
     	return {
     	     pre:function preLink(scope,iElement,iAttrs,controller){

     	     },
     	     post:function preLink(scope,iElement,iAttrs,controller){

     	     }    	
     	}
     },
     //returnfunctionpostLink( ... ) { ... }
     link: function link(tElement,tAttrs,transclude){
     	return {
     		 pre:function preLink(scope,iElement,iAttrs,controller){

     	     },
     	     post:function preLink(scope,iElement,iAttrs,controller){

     	     }
     	}
     }
  };
  
  -----------------
  Steps In Common
  -----------------
  (i)Inject All Depenedent Modules As specified Below
     (['ngMessages','ngAnimate','ngRoute','ngResource','ngGrid','ui.bootstrap','pascalprecht.translate']);
            
  
  (ii)Load Predifined HTML Templates in Application Root Java Script File
  
  Eg:angular.module('moduleName',[]).run(['$templateCache', '$http','$injector',
     ,function() {
      (i)inject your static content module via $http get request
      $http.get().then(function(response) {
         $injector.get('$compile')(response.data);
      });
   }]);
  
   (iii)Declare Sample Directive As specified in Directive Part
  Note:Do camelCase Notation for giving Directive Names
  
---------------------------------------------
PreRequisites For AutoComplete Functionality:
---------------------------------------------
>>>>Go through Comman Steps to enable Directives

 (i)Specify Corresponding directive That you have created Above with HTML Binding
Eg:
 <input type="text" id="origin" name="origin" ng-model="userSearch.origin" asw-autocomplete="originAutocomplete" />

 userDirectives:asw-autocomplete="originAutocomplete"-->aswAutoComplete

 (ii)Declare AutoComplete URL as AppParameters

 (iii)Declare URL in service Call If required

 (iv)Generate/Paint HTML Template as per Yor Req
 
 ---------------------------------------------
 PreRequisites For SaveTemplate/SaveFilter Functionality:
---------------------------------------------
>>>>Go through Comman Steps to enable Directives

Eg:
 <asw-usertemplate  name="SAVEFILTERS" ng-model="saveFilters" data="userSearch" style="float:right;"></asw-usertemplate>
  (OR)
<asw-usertemplate name="SAVETEMPLATES" ng-model="saveTemplates" getdata="getUserGridSettings()" setdata="applyUserGridSettings(json)"></asw-usertemplate>

 (ii)Declare SAVETEMPLATES URL as AppParameters

 (iii)Declare URL in service Call If required

 (iv)Generate/Paint HTML Template as per Yor Req
 
 -------------
| Detail Logic:|
 -------------
 
 args:document
      animate
      translate
      service
      
      
    restrict:'AECM'  -->restrict level (Attr/ELE/CLASS)
    ---------------
    Eg:
    String of subset of EACM which restricts the directive to a specific directive declaration style. If omitted, the defaults (elements and attributes) are used.
	
	E - Element name (default): <my-directive></my-directive>
	A - Attribute (default): <div my-directive="exp"></div>
	C - Class: <div class="my-directive: exp;"></div>
    M - Comment: <!-- directive: my-directive exp -->
    
    require: '^ngModel'/['^ngModel'](Should Have controller)
    ------------------------------------------------------
    //Used to Introduce Another Directive(Array Of Directives Suported)
    
    scope:{
    --------
    //Refer template and Identify inside which atttribute Ment for what
     type 1:<asw-usertemplate  name="SAVEFILTERS" ng-model="saveFilters" data="userSearch" style="float:right;"></asw-usertemplate>
	 type2:<asw-usertemplate name="SAVETEMPLATES" ng-model="saveTemplates" getdata="getUserGridSettings()" setdata="applyUserGridSettings(json)"></asw-usertemplate>
     
     name=@attr(Bind Local Scope Property to Value of DOM attribute Default:localName>name read from Parent scope not component Scope)
      data=two way data binding
      getData:'&' --
      setData:'&'
    }
    
    template/templateUrl:'templateName.html'(It Should be preloaded)
    ----------------------------------------------------------------
    
    controller:function($scope, $element, $attrs,Opt($transclude)){
    Controller constructor function. The controller is instantiated before the pre-linking phase and it is shared with other directives (see require attribute). This allows the directives to communicate with each other and augment each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:
    }
    ===========================================================================================
    1.Compile Function Don't Have access to scope 
    =======================
    $http call
    ---------------------------------------
    resourceInterceptors
    promises
    
    
    
    
    
    
    
    ========================================================================================================
    Http/restcall
    --------------
    Dependency Injection
    $provide
    GAPI
    
    
    1)dependency injection
    ----------------------
    app.constant('a',b);
    app.value();
    
    =========================================================================================================
    TODO
    
    Testing With Karma/Jasmine/Protractor